# Set up the database
odin.sql.file (module.path.join ../Schema/core/000-initial.blue.sql)
odin.sql.file (module.path.join ../Schema/core/002-add-merge-account.blue.sql)
odin.sql.file (module.path.join ../Schema/authn/001-initial.blue.sql)
odin.sql.file (module.path.join ../Schema/authn/002-fix-login.blue.sql)
odin.sql.file (module.path.join ../Schema/authn/003-alter-ledgers.blue.sql)
odin.sql.file (module.path.join ../Schema/app/002-initial.blue.sql)
odin.sql.file (module.path.join ../Schema/app/003-app-role.blue.sql)
odin.sql.file (module.path.join ../Schema/app/004-app-installation.blue.sql)
odin.sql.file (module.path.join ../Schema/app/005-alter-ledgers.blue.sql)
odin.sql.file (module.path.join ../Schema/app/006-merge-account-function.blue.sql)
odin.sql.file (module.path.join ../Schema/app/007-installation-indexing.blue.sql)

# Set up new users and apps
odin.user owner owner password1234
odin.user player1 player1 password1234
odin.user player2 player2 password1234
odin.user player3 player3 password1234

# Register app01
sql.insert odin.identity {"id": "app01"}
sql.insert odin.app_ledger {
    "reference": "ref1",
    "app_id": "app01",
    "app_name": "MyApp",
    "token": "APP_TOKEN",
    "redirect_url": "http://example.com",
    "access_policy": "INVITE_ONLY",
    "data_sharing_policy": "ALL"
}

# Register app02
sql.insert odin.identity {"id": "app02"}
sql.insert odin.app_ledger {
    "reference": "ref1",
    "app_id": "app02",
    "app_name": "MyApp",
    "token": "APP_TOKEN2",
    "redirect_url": "http://example.com",
    "access_policy": "INVITE_ONLY",
    "data_sharing_policy": "ALL"
}

GET test/app/secure / 401

# Mint App jwt
set app_jwt (odin.jwt.mint {"sub": "some_user", "iss": "http://odin.felspar.com/app/app01"} <JWT_SECRET>app01)
set-path testserver.headers ["Authorization"] (cat "Bearer " (lookup app_jwt))
GET test/app/secure / 200
GET test/app/secure /test 200

# Wrong App jwt should return 401
set app_jwt (odin.jwt.mint {"sub": "some_user", "iss": "http://odin.felspar.com/app/app02"} <JWT_SECRET>app01)
set-path testserver.headers ["Authorization"] (cat "Bearer " (lookup app_jwt))
GET test/app/secure / 401
GET test/app/secure /test 401

# Should return not implemented if iss doesn't prefix with app namespace
set app_jwt (odin.jwt.mint {"sub": "some_user", "iss": "app02"} APP_TOKEN)
set-path testserver.headers ["Authorization"] (cat "Bearer " (lookup app_jwt))
GET test/app/secure / 501
GET test/app/secure /test 501

