# Set up the database
odin.sql.file (module.path.join ../Schema/core/000-initial.blue.sql)
odin.sql.file (module.path.join ../Schema/core/002-add-merge-account.blue.sql)
odin.sql.file (module.path.join ../Schema/authn/001-initial.blue.sql)
odin.sql.file (module.path.join ../Schema/authn/002-fix-login.blue.sql)
odin.sql.file (module.path.join ../Schema/authn/003-alter-ledgers.blue.sql)
odin.sql.file (module.path.join ../Schema/app/002-initial.blue.sql)
odin.sql.file (module.path.join ../Schema/app/003-app-role.blue.sql)
odin.sql.file (module.path.join ../Schema/app/004-app-installation.blue.sql)
odin.sql.file (module.path.join ../Schema/app/005-alter-ledgers.blue.sql)
odin.sql.file (module.path.join ../Schema/app/006-merge-account-function.blue.sql)
odin.sql.file (module.path.join ../Schema/app/007-installation-indexing.blue.sql)

# Set up new users and apps
odin.user owner owner password1234
odin.user player1 player1 password1234
odin.user player2 player2 password1234
odin.user player3 player3 password1234

# Support only POST
GET test/app/handover/mock_user / 501
GET test/app/handover/mock_user /app02 501


# Validate Payload
POST test/app/handover/mock_user / {} 501

POST test/app/handover/mock_user / {"token": "mock"} 200
GET test/app/handover/validate /mock_user 200 {"id": "mock_user"}

# Should record identity data if modules are enabled
odin.sql.file (module.path.join ../Schema/opts/full-name/001-initial.blue.sql)
odin.sql.file (module.path.join ../Schema/opts/full-name/003-alter-ledgers.blue.sql)
odin.sql.file (module.path.join ../Schema/opts/full-name/004-merge-account-function.blue.sql)
POST test/app/handover/mock_user / {"token": "mock"} 200
GET test/app/handover/validate /mock_user 200 {"id": "mock_user", "full_name": "Mock User"}

# Should work with empty or null full-name
POST test/app/handover/no_full-name / {"token": "mock"} 200
GET test/app/handover/validate /no_full-name 200 {"id": "no_full-name", "full_name": null}

POST test/app/handover/empty_full-name / {"token": "mock"} 200
GET test/app/handover/validate /empty_full-name 200 {"id": "empty_full-name", "full_name": null}

odin.sql.file (module.path.join ../Schema/opts/email/001-initial.blue.sql)
odin.sql.file (module.path.join ../Schema/opts/email/003-alter-ledgers.blue.sql)
odin.sql.file (module.path.join ../Schema/opts/email/004-merge-account-function.blue.sql)
POST test/app/handover/mock_user / {"token": "mock"} 200
GET test/app/handover/validate /mock_user 200 {"id": "mock_user", "full_name": "Mock User", "email": "mock_user@email.com"}

# Should work with empty or null email
POST test/app/handover/no_email / {"token": "mock"} 200
GET test/app/handover/validate /no_email 200 {"id": "no_email", "email": null}

POST test/app/handover/empty_email / {"token": "mock"} 200
GET test/app/handover/validate /empty_email 200 {"id": "empty_email", "email": null}


# Should record user into groups
odin.sql.file (module.path.join ../Schema/authz/001-initial.blue.sql)
odin.sql.file (module.path.join ../Schema/authz/002-view-user_permission.blue.sql)
odin.sql.file (module.path.join ../Schema/authz/003-alter-ledgers.blue.sql)
odin.sql.file (module.path.join ../Schema/authz/004-merge-account-function.blue.sql)
GET test/app/handover/validate /mock_user/group-membership 200 {"groups": null}
POST test/app/handover/mock_user / {"token": "mock"} 200
GET test/app/handover/validate /mock_user 200
GET test/app/handover/validate /mock_user/group-membership 200 {"groups": ["admin-group", "admin-user"]}

# Should remove user from invalid groups
sql.insert odin.group_membership_ledger {
    "reference": "test-handover",
    "identity_id": "mock_user",
    "group_slug": "auditor",
    "member": true
}
GET test/app/handover/validate /mock_user/group-membership 200 {"groups": ["admin-group", "admin-user", "auditor"]}
POST test/app/handover/mock_user / {"token": "mock"} 200
GET test/app/handover/validate /mock_user/group-membership 200 {"groups": ["admin-group", "admin-user"]}
